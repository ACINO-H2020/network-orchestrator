/*
 * Copyright (c) 2018 ACINO Consortium
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Net2Plan - ONOS REST Interface
 * Interface description for Net2Plan to ONOS integration. This is the API presented by Net2Plan to ONOS, a separate description exists for the other direction.
 * <p>
 * OpenAPI spec version: 0.1.3
 * Contact: ponsko@acreo.se
 * <p>
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 * <p>
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * <p>
 * http://www.apache.org/licenses/LICENSE-2.0
 * <p>
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package org.onosproject.orchestrator.netrap.model;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Representation of a full topology
 */
@ApiModel(description = "Representation of a full topology")

public class NetRapTopology {

    private List<NetRapLink> links = new ArrayList<NetRapLink>();
    private List<NetRapNode> nodes = new ArrayList<NetRapNode>();
    private List<NetRapSRG> srgs = new ArrayList<NetRapSRG>();

    /**
     **/
    public NetRapTopology links(List<NetRapLink> links) {
        this.links = links;
        return this;
    }

    public NetRapTopology addLinksItem(NetRapLink linksItem) {
        this.links.add(linksItem);
        return this;
    }

    @ApiModelProperty(example = "null", required = true, value = "")
    public List<NetRapLink> getLinks() {
        return links;
    }

    public void setLinks(List<NetRapLink> links) {
        this.links = links;
    }

    public NetRapTopology nodes(List<NetRapNode> nodes) {
        this.nodes = nodes;
        return this;
    }

    public NetRapTopology addNodesItem(NetRapNode nodesItem) {
        this.nodes.add(nodesItem);
        return this;
    }

    @ApiModelProperty(example = "null", required = true, value = "")
    public List<NetRapNode> getNodes() {
        return nodes;
    }

    public void setNodes(List<NetRapNode> nodes) {
        this.nodes = nodes;
    }

    /**
     **/
    public NetRapTopology srgs(List<NetRapSRG> srgs) {
        this.srgs = srgs;
        return this;
    }

    public NetRapTopology addSrgsItem(NetRapSRG srgsItem) {
        this.srgs.add(srgsItem);
        return this;
    }

    @ApiModelProperty(example = "null", required = true, value = "")
    public List<NetRapSRG> getSrgs() {
        return srgs;
    }

    public void setSrgs(List<NetRapSRG> srgs) {
        this.srgs = srgs;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        NetRapTopology netRapTopology = (NetRapTopology) o;
        return Objects.equals(links, netRapTopology.links) &&
                Objects.equals(nodes, netRapTopology.nodes) &&
                Objects.equals(srgs, netRapTopology.srgs);
    }

    @Override
    public int hashCode() {
        return Objects.hash(links, nodes, srgs);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class NetRapTopology {\n");

        sb.append("    links: ").append(toIndentedString(links)).append("\n");
        sb.append("    nodes: ").append(toIndentedString(nodes)).append("\n");
        sb.append("    srgs: ").append(toIndentedString(srgs)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}

