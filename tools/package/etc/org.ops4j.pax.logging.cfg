################################################################################
#
#    Licensed to the Apache Software Foundation (ASF) under one or more
#    contributor license agreements.  See the NOTICE file distributed with
#    this work for additional information regarding copyright ownership.
#    The ASF licenses this file to You under the Apache License, Version 2.0
#    (the "License"); you may not use this file except in compliance with
#    the License.  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#
################################################################################

# Root logger
log4j.rootLogger=INFO, out, osgi:*
#log4j.logger.org.onosproject.orchestrator.dismi.compiler.IntentDecomposer=DEBUG,acino
#log4j.logger.org.onosproject.provider.of.flow.impl.OpenFlowRuleProvider=DEBUG,acino
#log4j.logger.org.onosproject.drivers.juniper.FlowRuleJuniperImpl=DEBUG,acino
#log4j.logger.org.onosproject.net.intent.impl.ObjectiveTracker=DEBUG,acino
log4j.logger.org.onosproject.orchestrator.netrap.impl.NetRapIntentImpl=DEBUG,acino
log4j.logger.org.onosproject.orchestrator.netrap.impl.NetRapEventHandler=INFO,acino
log4j.logger.org.onosproject.orchestrator.dismi.compiler.IntentDecomposer=DEBUG,acino
log4j.logger.org.onosproject.orchestrator.intent.ACIPPIntentCompiler=DEBUG,acino
log4j.throwableRenderer=org.apache.log4j.OsgiThrowableRenderer
#log4j.logger.org.onosproject.net.intent.impl.phase.Compiling=DEBUG,acino
#log4j.logger.org.onosproject.provider.netcfgclientports.NetworkConfigClientPortsProvider=TRACE,out

# CONSOLE appender not used by default
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{ISO8601} | %-5.5p | %-16.16t | %-32.32c{1} | %X{bundle.id} - %X{bundle.name} - %X{bundle.version} | %m%n

# File appender
log4j.appender.out=org.apache.log4j.RollingFileAppender
log4j.appender.out.layout=org.apache.log4j.PatternLayout
log4j.appender.out.layout.ConversionPattern=%d{ISO8601} | %-5.5p | %-16.16t | %-32.32c{1} | %X{bundle.id} - %X{bundle.name} - %X{bundle.version} | %m%n
log4j.appender.out.file=${karaf.data}/log/karaf.log
log4j.appender.out.append=true
log4j.appender.out.maxFileSize=10MB
log4j.appender.out.maxBackupIndex=10

# File appender
log4j.appender.acino=org.apache.log4j.RollingFileAppender
log4j.appender.acino.layout=org.apache.log4j.PatternLayout
log4j.appender.acino.layout.ConversionPattern=%d{ISO8601} | %-5.5p | %-16.16t | %-32.32c{1} | %X{bundle.id} - %X{bundle.name} - %X{bundle.version} | %m%n
log4j.appender.acino.file=${karaf.data}/log/acino.log
#log4j.appender.acino.filter.f1=org.apache.log4j.varia.LevelRangeFilter
#log4j.appender.acino.filter.f1.LevelMax=DEBUG
#log4j.appender.acino.filter.f1.LevelMin=DEBUG
log4j.appender.acino.append=true
log4j.appender.acino.maxFileSize=10MB
log4j.appender.acino.maxBackupIndex=10

# Sift appender
log4j.appender.sift=org.apache.log4j.sift.MDCSiftingAppender
log4j.appender.sift.key=bundle.name
log4j.appender.sift.default=karaf
log4j.appender.sift.appender=org.apache.log4j.FileAppender
log4j.appender.sift.appender.layout=org.apache.log4j.PatternLayout
log4j.appender.sift.appender.layout.ConversionPattern=%d{ISO8601} | %-5.5p | %-16.16t | %-32.32c{1} | %m%n
log4j.appender.sift.appender.file=${karaf.data}/log/$\\{bundle.name\\}.log
log4j.appender.sift.appender.append=true

log4j.logger.org.apache.sshd = WARN
log4j.logger.net.kuujo.copycat= INFO
